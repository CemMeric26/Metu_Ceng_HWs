#name = Cem Meriç Şefikoğulları 
#ID = 2448850
# Stack starts here and grows to lower addresses
.pos 0x1800
stack:

.pos 0
    irmovq stack, %rsp
    irmovq ele0, %rdi
    irmovq array, %rsi
    irmovq $56, %rdx
    call insert_ll 
    halt


insert_ll:
    xorq   %rax, %rax
    rmmovq %rdx, (%rsi)         #*array = value; rdx -- value = 56

    rrmovq %rdi, %r8            #%r8 has head

    andq %r8, %r8   # if ! head
    jne  operation
    mrmovq (%rdi), %r12      #r12 have head->value now
    subq %rdx, %r12       # (r8 = head->value) > value
    jl operation
                             
    rmmovq %rdi, 8(%rsi)           # *(array+1 ) = head            #inside of the if
    rrmovq  %rsi, %rax              #return array;
    ret 

    operation:
        rrmovq %rdi, %r9        # r9 is temp pointing head r9 is temp
    loop:    
        mrmovq 8(%r9), %r10     # r10 temp->next
        andq    %r10, %r10         #if temp->next is null
        je    operate
        rrmovq %rdx, %r11       # %r11 has value
        mrmovq (%r10), %r13     #r13 has temp->next->value
        subq  %r13, %r11           # value >? (temp->next->value)
        jl operate
        rrmovq  %r10, %r9        # r9 have temp->next now
        jmp loop

        operate:
            mrmovq 8(%r9), %r10
            rmmovq %r10, 8(%rsi)   # *(array+1) = temp->next;
            rmmovq %rsi, 8(%r9)       #temp->next = array;
            rrmovq %rdi, %rax
            ret



.pos 0x200
ele0:
.quad 0x0005        #val = 5
.quad ele1

ele1:
.quad 0x000c        #val=12
.quad ele2

ele2:
.quad 0x0010        #val = 16
.quad ele3

ele3:
.quad 0x001a        #val = 26
.quad ele4

ele4:
.quad 0x0030        #val = 48
.quad ele5

ele5:
.quad 0x0045        #val = 69
.quad ele6

ele6:
.quad 0x005e        #val = 94
.quad 0 # Remember that 0 is null.

# An array with size of 2 to put new element in:
# Make sure your code works correctly. Do not
# fill beyond the bounds of the array. You should
# see the new value and the pointer to the next
# element.
.pos 0x400
array:
.quad 0
.quad 0