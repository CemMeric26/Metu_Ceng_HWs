#name = Cem Meriç Şefikoğulları 
#ID = 2448850
# Stack starts here and grows to lower addresses
.pos 0x400
stack:

.pos 0
    irmovq stack, %rsp
    irmovq ele0, %rdi
    irmovq $4, %rsi          #k=4 is the 
    call kth_l1              #maybe ret before the halt
    halt

#long kth_ll(const struct list *head, long k)
#head in rdi k in rsi
kth_l1:
    xorq  %rax,%rax         #rax = 0
    irmovq $1, %r8          #constant 1
    subq    %r8,%rsi        #k--
    jmp check               #goto check
loop:
    subq    %r8,%rsi        #k--
    mrmovq 8(%rdi), %rdi    #head = head->next;
check:
    andq %rsi,%rsi          # if k==0 break and ret
    jne loop            #stop when 0
    mrmovq  (%rdi), %rax   #rax has kth->value 
    ret                 #Return

# absolutely positioned here to debug addresses more easily.
.pos 0x200
ele0:
.quad 0x0005        #val = 5
.quad ele1

ele1:
.quad 0x000c        #val=12
.quad ele2

ele2:
.quad 0x0010        #val = 16
.quad ele3

ele3:
.quad 0x001a        #val = 26
.quad ele4

ele4:
.quad 0x0030        #val = 48
.quad ele5

ele5:
.quad 0x0045        #val = 69
.quad ele6

ele6:
.quad 0x005e        #val = 94
.quad 0 # Remember that 0 is null.

